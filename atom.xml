<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>土豆丝不加辣</title>
  <subtitle>java后端爱好者-点滴记忆</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xrhou.github.io/"/>
  <updated>2017-08-22T05:59:33.000Z</updated>
  <id>http://xrhou.github.io/</id>
  
  <author>
    <name>houxiurong-侯秀荣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>拼接json格式post</title>
    <link href="http://xrhou.github.io/2017/08/19/%E6%8B%BC%E6%8E%A5json%E6%A0%BC%E5%BC%8Fpost/"/>
    <id>http://xrhou.github.io/2017/08/19/拼接json格式post/</id>
    <published>2017-08-19T13:54:39.000Z</published>
    <updated>2017-08-22T05:59:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>将json格式的字符拼接成需要的url post请求<br><a id="more"></a></p>
<h3 id="1-json格式的字符"><a href="#1-json格式的字符" class="headerlink" title="1.json格式的字符"></a>1.json格式的字符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"notifyStr"</span>: &#123;</div><div class="line">    <span class="string">"charset"</span>: <span class="string">"utf-8"</span>,</div><div class="line">    <span class="string">"biz_content"</span>: <span class="string">"&#123;\"mer_id\":\"02360\",\"bank_disc_amt\":0,\"mer_disc_amt\":0,\"pay_time\":\"20170901\",\"attach\":\"\",\"cust_id\":\"GC75JOxg3UFjG\",\"order_id\":\"0209010780760\",\"out_trade_no\":\"P1708181ec800000001\",\"total_amt\":1,\"coupon_amt\":0,\"payment_amt\":1,\"card_no\":\"622202*********9149\",\"return_msg\":\"success\",\"ecoupon_amt\":0,\"total_disc_amt\":0,\"msg_id\":\"020099210780760\",\"point_amt\":0,\"return_code\":\"0\"&#125;"</span>,</div><div class="line">    <span class="string">"format"</span>: <span class="string">"json"</span>,</div><div class="line">    <span class="string">"sign"</span>: <span class="string">"JdjqDJD71rur7a48e/conMlG0lY6sryvTmLDe9tA0EyxjpcspnvBhsafUTtTkdQ6fZ1Qqj2K+75ELFfCVmhdydeTLpXX27KmTNBRtO5euLLZEJjFx7XWT6UWK3kHlTcFbkAl+smNRfsfplg="</span>,</div><div class="line">    <span class="string">"from"</span>: <span class="string">"hou-api"</span>,</div><div class="line">    <span class="string">"api"</span>: <span class="string">"/ui/thirdparty/order/V1/pay"</span>,</div><div class="line">    <span class="string">"app_id"</span>: <span class="string">"100000036501"</span>,</div><div class="line">    <span class="string">"sign_type"</span>: <span class="string">"RSA"</span>,</div><div class="line">    <span class="string">"timestamp"</span>: <span class="string">"2017-08-18 18:48:14"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"serial"</span>: <span class="string">"P170ec800000001"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-将json转换为Java对象"><a href="#2-将json转换为Java对象" class="headerlink" title="2.将json转换为Java对象"></a>2.将json转换为Java对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public class NotifyReqDTO implements Serializable &#123;</div><div class="line">        private static final long serialVersionUID = -4715222968104483630L;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 流水号</div><div class="line">         */</div><div class="line">        private String serial;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 格式报文</div><div class="line">         */</div><div class="line">        private Map&lt;String, String&gt; notifyStr;</div><div class="line"></div><div class="line">        public String <span class="function"><span class="title">getSerial</span></span>() &#123;</div><div class="line">            <span class="built_in">return</span> serial;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void setSerial(String serial) &#123;</div><div class="line">            this.serial = serial;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public Map&lt;String, String&gt; <span class="function"><span class="title">getNotifyStr</span></span>() &#123;</div><div class="line">            <span class="built_in">return</span> notifyStr;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void setNotifyStr(Map&lt;String, String&gt; notifyStr) &#123;</div><div class="line">            this.notifyStr = notifyStr;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="3-拼接处理-java代码"><a href="#3-拼接处理-java代码" class="headerlink" title="3.拼接处理-java代码"></a>3.拼接处理-java代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">package com.houxiurong.utils;</div><div class="line"></div><div class="line">import com.alibaba.fastjson.JSON;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.Collections;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by houxiurong on 2017/8/14.</div><div class="line"> */</div><div class="line">public class SignUtils &#123;</div><div class="line"></div><div class="line">    private static Logger logger = LoggerFactory.getLogger(SignUtils.class);</div><div class="line"></div><div class="line">	/**</div><div class="line">     * 签参数组装</div><div class="line">     *</div><div class="line">     * @param params</div><div class="line">     * @<span class="built_in">return</span></div><div class="line">     */</div><div class="line">    public static String buildMapSignString(Map&lt;String, String&gt; params) &#123;</div><div class="line">        List&lt;String&gt; keys = new ArrayList&lt;String&gt;(params.size());</div><div class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</div><div class="line">            <span class="keyword">if</span> (<span class="string">"sign"</span>.equals(key))</div><div class="line">                <span class="built_in">continue</span>;</div><div class="line">            keys.add(key);</div><div class="line">        &#125;</div><div class="line">        Collections.sort(keys);</div><div class="line">        StringBuilder buf = new StringBuilder();</div><div class="line">        <span class="keyword">for</span> (int i = 0; i &lt; keys.size(); i++) &#123;</div><div class="line">            String key = keys.get(i);</div><div class="line">            String value = params.get(key);</div><div class="line">            <span class="keyword">if</span> (i == keys.size() - 1) &#123;</div><div class="line">                buf.append(key + <span class="string">"="</span> + value);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                buf.append(key + <span class="string">"="</span> + value + <span class="string">"&amp;"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> buf.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h3 id="3-将上面的json转换为java对象，使用alibaba-fastjaon的JSON工具"><a href="#3-将上面的json转换为java对象，使用alibaba-fastjaon的JSON工具" class="headerlink" title="3.将上面的json转换为java对象，使用alibaba.fastjaon的JSON工具"></a>3.将上面的json转换为java对象，使用alibaba.fastjaon的JSON工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">public void static main(String[] args)&#123;</div><div class="line"> 	String strObject =<span class="string">"&#123;\n"</span> +</div><div class="line">                <span class="string">"  \"notifyStr\": &#123;\n"</span> +</div><div class="line">                <span class="string">"    \"charset\": \"utf-8\",\n"</span> +</div><div class="line">                <span class="string">"    \"biz_content\": \"&#123;\\\"mer_id\\\":\\\"02360\\\",\\\"bank_disc_amt\\\":0,\\\"mer_disc_amt\\\":0,\\\"pay_time\\\":\\\"20170901\\\",\\\"attach\\\":\\\"\\\",\\\"cust_id\\\":\\\"GC75JOxg3UFjG\\\",\\\"order_id\\\":\\\"0209010780760\\\",\\\"out_trade_no\\\":\\\"P1708181ec800000001\\\",\\\"total_amt\\\":1,\\\"coupon_amt\\\":0,\\\"payment_amt\\\":1,\\\"card_no\\\":\\\"622202*********9149\\\",\\\"return_msg\\\":\\\"success\\\",\\\"ecoupon_amt\\\":0,\\\"total_disc_amt\\\":0,\\\"msg_id\\\":\\\"020099210780760\\\",\\\"point_amt\\\":0,\\\"return_code\\\":\\\"0\\\"&#125;\",\n"</span> +</div><div class="line">                <span class="string">"    \"format\": \"json\",\n"</span> +</div><div class="line">                <span class="string">"    \"sign\": \"JdjqDJD71rur7a48e/conMlG0lY6sryvTmLDe9tA0EyxjpcspnvBhsafUTtTkdQ6fZ1Qqj2K+75ELFfCVmhdydeTLpXX27KmTNBRtO5euLLZEJjFx7XWT6UWK3kHlTcFbkAl+smNRfsfplg=\",\n"</span> +</div><div class="line">                <span class="string">"    \"from\": \"hou-api\",\n"</span> +</div><div class="line">                <span class="string">"    \"api\": \"/ui/thirdparty/order/V1/pay\",\n"</span> +</div><div class="line">                <span class="string">"    \"app_id\": \"100000036501\",\n"</span> +</div><div class="line">                <span class="string">"    \"sign_type\": \"RSA\",\n"</span> +</div><div class="line">                <span class="string">"    \"timestamp\": \"2017-08-18 18:48:14\"\n"</span> +</div><div class="line">                <span class="string">"  &#125;,\n"</span> +</div><div class="line">                <span class="string">"  \"serial\": \"P170ec800000001\"\n"</span> +</div><div class="line">                <span class="string">"&#125;"</span>;</div><div class="line">                </div><div class="line"> 	NotifyReqDTO notifyReqDTO = JSON.parseObject(strObject, NotifyReqDTO.class);</div><div class="line">    String formatStr = SignUtils.buildMapSignString(params);</div><div class="line">    System.out.println(<span class="string">"formatStr:"</span> + formatStr);</div><div class="line">    String formatResponseStr = <span class="string">"/houxiurong/notify/"</span> + NotifyReqDTO.getSerial() + <span class="string">"?"</span> + formatStr;</div><div class="line">    String houSign = SignUtils.getSign(NotifyReqDTO.getNotifyStr());</div><div class="line">    System.out.println(<span class="string">"formatStr:"</span> + formatStr);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将json格式的字符拼接成需要的url post请求&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://xrhou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>mac os x install redis-3.2.9</title>
    <link href="http://xrhou.github.io/2017/08/19/mac-os-x-install-redis-3-2-9/"/>
    <id>http://xrhou.github.io/2017/08/19/mac-os-x-install-redis-3-2-9/</id>
    <published>2017-08-19T13:40:26.000Z</published>
    <updated>2017-08-22T05:58:02.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h3 id="1-下载、解压、重命名并且编译安装Redis"><a href="#1-下载、解压、重命名并且编译安装Redis" class="headerlink" title="1.下载、解压、重命名并且编译安装Redis"></a>1.下载、解压、重命名并且编译安装Redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">~ wget http://download.redis.io/releases/redis-3.2.9.tar.gz </div><div class="line">~ tar xzf redis-3.2.9.tar.gz</div><div class="line">~ mv redis-3.2.9 redis</div><div class="line">~ <span class="built_in">cd</span> redis</div><div class="line">~ make</div><div class="line">~ make <span class="built_in">test</span></div><div class="line">~ make install</div></pre></td></tr></table></figure>
<h3 id="2-配置文件redis-conf"><a href="#2-配置文件redis-conf" class="headerlink" title="2.配置文件redis.conf"></a>2.配置文件redis.conf</h3><p>redis解压目录里有一个配置文件redis.conf ，编辑此配置文件，找到 dir ./ 这一行[247行]。redis会将内存中的数据写入文件中，而此配置就是指定数据文件保存的路径。<br>我本机指定的目录：<br>dir ./<br>修改为<br>dir /Users/houxiurong/Software/redis_data/<br>编辑过后，将配置文件移动到 /usr/local/etc 目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ sudo mv redis.conf /usr/<span class="built_in">local</span>/etc/</div></pre></td></tr></table></figure></p>
<p>启动Redis<br>终端输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ /usr/<span class="built_in">local</span>/bin/redis-server /usr/<span class="built_in">local</span>/etc/redis.conf</div></pre></td></tr></table></figure></p>
<p>服务启动成功画面:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">houxiurong-MacBook-Pro:src houxiurong$ /usr/<span class="built_in">local</span>/bin/redis-server /usr/<span class="built_in">local</span>/etc/redis.conf </div><div class="line">6508:M 01 Jul 18:21:33.662 * Increased maximum number of open files to 10032 (it was originally <span class="built_in">set</span> to 256).</div><div class="line">_._ </div><div class="line">_.-``__ <span class="string">''</span>-._ </div><div class="line">_.-`` `. `_. <span class="string">''</span>-._ Redis 3.2.9 (00000000/0) 64 bit</div><div class="line">.-`` .-```. ```\/ _.,_ <span class="string">''</span>-._ </div><div class="line">( <span class="string">' , .-` | `, ) Running in standalone mode</span></div><div class="line">|`-._`-...-` __...-.``-._|'` _.-<span class="string">'| Port: 6379</span></div><div class="line">| `-._ `._ / _.-' | PID: 6508</div><div class="line">`-._ `-._ `-./ _.-<span class="string">' _.-'</span> </div><div class="line">|`-._`-._ `-.__.-<span class="string">' _.-'</span>_.-<span class="string">'| </span></div><div class="line">| `-._`-._ _.-'_.-<span class="string">' | http://redis.io </span></div><div class="line">`-._ `-._`-.__.-'_.-<span class="string">' _.-'</span> </div><div class="line">|`-._`-._ `-.__.-<span class="string">' _.-'</span>_.-<span class="string">'| </span></div><div class="line">| `-._`-._ _.-'_.-<span class="string">' | </span></div><div class="line">`-._ `-._`-.__.-'_.-<span class="string">' _.-'</span> </div><div class="line">`-._ `-.__.-<span class="string">' _.-'</span> </div><div class="line">`-._ _.-<span class="string">' </span></div><div class="line">`-.__.-'</div><div class="line"></div><div class="line">6508:M 01 Jul 18:21:33.664 <span class="comment"># Server started, Redis version 3.2.9</span></div><div class="line">6508:M 01 Jul 18:21:33.664 * DB loaded from disk: 0.000 seconds</div><div class="line">6508:M 01 Jul 18:21:33.664 * The server is now ready to accept connections on port 6379</div></pre></td></tr></table></figure></p>
<h3 id="3-测试连通性"><a href="#3-测试连通性" class="headerlink" title="3.测试连通性"></a>3.测试连通性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">~ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line">~ ./redis-cli</div><div class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> me houxiurong</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get me</div><div class="line"><span class="string">"houxiurong"</span></div></pre></td></tr></table></figure>
<h3 id="4-设置开机自动启动redis-server"><a href="#4-设置开机自动启动redis-server" class="headerlink" title="4.设置开机自动启动redis server"></a>4.设置开机自动启动redis server</h3><p>新建plist文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ sudo vi /Library/LaunchDaemons/io.redis.redis-server.plist</div></pre></td></tr></table></figure></p>
<p>文件内容如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC <span class="string">"-//Apple Computer//DTD PLIST 1.0//EN"</span> <span class="string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</div><div class="line">&lt;plist version=<span class="string">"1.0"</span>&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;Label&lt;/key&gt;</div><div class="line">&lt;string&gt;io.redis.redis-server&lt;/string&gt;</div><div class="line">&lt;key&gt;ProgramArguments&lt;/key&gt;</div><div class="line">&lt;array&gt;</div><div class="line">&lt;string&gt;/usr/<span class="built_in">local</span>/bin/redis-server&lt;/string&gt;</div><div class="line">&lt;string&gt;/usr/<span class="built_in">local</span>/etc/redis.conf&lt;/string&gt;</div><div class="line">&lt;/array&gt;</div><div class="line">&lt;key&gt;RunAtLoad&lt;/key&gt;</div><div class="line">&lt;<span class="literal">true</span>/&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div></pre></td></tr></table></figure></p>
<h3 id="5-使用launchctl设置开机自动启动"><a href="#5-使用launchctl设置开机自动启动" class="headerlink" title="5.使用launchctl设置开机自动启动"></a>5.使用launchctl设置开机自动启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ sudo launchctl load /Library/LaunchDaemons/io.redis.redis-server.plist</div></pre></td></tr></table></figure>
<p>使用launchctl启动redis server<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ sudo launchctl start io.redis.redis-server</div></pre></td></tr></table></figure></p>
<p>使用launchctl停止redis server<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~ sudo launchctl stop io.redis.redis-server</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;1-下载、解压、重命名并且编译安装Redis&quot;&gt;&lt;a href=&quot;#1-下载、解压、重命名并且编译安装Redis&quot; class=&quot;headerlink&quot; title=&quot;1.下载、解压、重命名并且编译安装Redis&quot;&gt;&lt;/a&gt;1.
    
    </summary>
    
    
      <category term="心路历程" scheme="http://xrhou.github.io/tags/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>dubbo参数调优说明</title>
    <link href="http://xrhou.github.io/2017/08/10/dubbo%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E8%AF%B4%E6%98%8E/"/>
    <id>http://xrhou.github.io/2017/08/10/dubbo参数调优说明/</id>
    <published>2017-08-10T09:59:09.000Z</published>
    <updated>2017-08-22T06:47:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>dubbo作为一个服务治理框架，功能相对比较完善，性能也挺不错。但很多朋友在使用dubbo的时候，只是简单的参考官方说明进行搭建，并没有过多的去思考一些关键参数的意义（也可能是时间紧任务多，没空出来研究），最终做出来的效果有一定的打折。 这里我根据目前我们项目的使用情况列出几个性能调优的参数及其意义，供大家参考。<br>在介绍参数之前，我们先了解下dubbo中配置的优先级，以免出现调优参数设置了却没发现效果实际是配置被覆盖导致这样的问题。</p>
<h5 id="dubbo分为consumer和provider端，在配置各个参数时，其优先级如下："><a href="#dubbo分为consumer和provider端，在配置各个参数时，其优先级如下：" class="headerlink" title="dubbo分为consumer和provider端，在配置各个参数时，其优先级如下："></a>dubbo分为consumer和provider端，在配置各个参数时，其优先级如下：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1、consumer的method配置     </div><div class="line">2、provider的method配置     </div><div class="line">3、consumer的reference配置    </div><div class="line">4、provider的service配置    </div><div class="line">5、consumer的consumer节点配置   </div><div class="line">6、provider的provider节点配置</div></pre></td></tr></table></figure>
<p>可以看到，方法级的配置优先级高于接口级，consumer的优先级高于provider。同时，在本地参数配置还存在一层优先级：<br>1、系统参数(-D)，如-Ddubbo.protocol.port=20881<br>2、xml配置<br>3、property文件<br>了解了这两个优先级，调优起来才会更加清晰，省去了一些诸如配置设置了不生效这样的麻烦。注意，其实dubbo中还可以通过将配置写入注册中心的方式覆盖用户配置（优先级高于系统参数），这里不展开，有兴趣的同学可以去看官方文档。接下来我们看看dubbo的几个比较重要的调优参数，及其影响的方式和大概实现。</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>作用范围</th>
<th>默认值</th>
<th>说明</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>actives</td>
<td>consumer</td>
<td>0</td>
<td>每服务消费者每服务每方法最大并发调用数</td>
<td>0表示不限制</td>
</tr>
<tr>
<td>connections</td>
<td>Consumer</td>
<td></td>
<td>每个提供者的最大连接数，rmi、http、hessian等短连接协议表示限制连接数，dubbo等长连接协表示建立的长连接个数    dubbo时为1，及复用单链接</td>
</tr>
<tr>
<td>accepts</td>
<td>provider</td>
<td>0</td>
<td>服务提供方最大可接受连接数</td>
<td>0表示不限制</td>
</tr>
<tr>
<td>iothreads</td>
<td>provider</td>
<td>cpu个数+1</td>
<td>io线程池大小(固定大小)</td>
<td></td>
</tr>
<tr>
<td>threads</td>
<td>provider</td>
<td>200</td>
<td>业务线程池大小(固定大小)</td>
<td></td>
</tr>
<tr>
<td>executes</td>
<td>provider</td>
<td>0</td>
<td>服务提供者每服务每方法最大可并行执行请求数</td>
<td>0表示不限制</td>
</tr>
<tr>
<td>tps</td>
<td>provider</td>
<td></td>
<td>指定时间内（默认60s）最大的可执行次数，注意与executes的区别</td>
<td>默认不开启</td>
</tr>
</tbody>
</table>
<p>注意表中参数与图中的对应关系：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">1、当consumer发起一个请求时，首先经过active limit(参数actives）进行方法级别的限制，其实现方式为CHM中存放计数器(AtomicInteger)，</div><div class="line">请求时加1，请求完成（包括异常）减1,如果超过actives则等待有其他请求完成后重试或者超时后失败；</div><div class="line">2、从多个连接(connections）中选择一个连接发送数据，对于默认的netty实现来说，由于可以复用连接，默认一个连接就可以。</div><div class="line">不过如果你在压测，且只有一个consumer,一个provider，此时适当的加大connections确实能够增强网络传输能力。</div><div class="line">但线上业务由于有多个consumer多个provider，因此不建议增加connections参数；</div><div class="line">3、连接到达provider时（如dubbo的初次连接），首先会判断总连接数是否超限（acceps），超过限制连接将被拒绝；</div><div class="line">4、连接成功后，具体的请求交给io thread处理。io threads虽然是处理数据的读写，但io部分为异步，更多的消耗的是cpu，</div><div class="line">因此iothreads默认cpu个数+1是比较合理的设置，不建议调整此参数;</div><div class="line">5、数据读取并反序列化以后，交给业务线程池处理，默认情况下线程池为fixed，且排队队列为0(queues)，</div><div class="line">这种情况下，最大并发等于业务线程池大小(threads)，如果希望有请求的堆积能力，可以调整queues参数。如果希望快速失败由其他节点处理（官方推荐方式），</div><div class="line">则不修改queues，只调整threads;</div><div class="line">6、execute limit（参数executes）是方法级别的并发限制，原理与actives类似，只是少了等待的过程，即受限后立即失败；</div><div class="line">7、tps，控制指定时间内（默认60s）的请求数。注意目前dubbo默认没有支持该参数，</div><div class="line">需要加一个META-INF/dubbo/com.alibaba.dubbo.rpc.Filter文件，文件内容为：</div><div class="line"></div><div class="line">    tps=com.alibaba.dubbo.rpc.filter.TpsLimitFilter</div><div class="line"></div><div class="line">从上面的分析，可以看出如果consumer数*actives&gt;provider数*threads且queues=0，则会存在部分请求无法申请到资源，重试也有很大几率失败。 当需要对一个接口的不同方法进行不同的并发控制时使用executes，否则调整threads就可以。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;dubbo作为一个服务治理框架，功能相对比较完善，性能也挺不错。但很多朋友在使用dubbo的时候，只是简单的参考官方说明进行搭建，并没有过多的去思考一些关键参数的意义（也可能是时间紧任务多，没空出来研究），最终做出来的效果有一定的打折。 这里我根据目前我们项目的使用情况列出
    
    </summary>
    
    
      <category term="java" scheme="http://xrhou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>互联网创业公司黑话指南</title>
    <link href="http://xrhou.github.io/2017/07/23/%E4%BA%92%E8%81%94%E7%BD%91%E5%88%9B%E4%B8%9A%E5%85%AC%E5%8F%B8%E9%BB%91%E8%AF%9D%E6%8C%87%E5%8D%97/"/>
    <id>http://xrhou.github.io/2017/07/23/互联网创业公司黑话指南/</id>
    <published>2017-07-23T14:45:48.000Z</published>
    <updated>2017-08-22T05:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理了一下互联网创业公司常用的黑话，供大家参考，可以避免理解上的偏差。你肯定听过其中几款，却未必了解当时说话人的怨念……在阅读过程中，请保持严肃，不要哄堂大笑。<br><a id="more"></a><br><img src="http://ot4jt9w1k.bkt.clouddn.com/11.png" alt="一脸懵逼"></p>
<h3 id="老板黑话"><a href="#老板黑话" class="headerlink" title="老板黑话"></a><font color="#FF8247" size="3" face="黑体">老板黑话</font></h3><p>你来我办公室一下 = 老子又想到了绝妙的idea<br>我们要专注用户体验 = 把界面画的好看点<br>产品不够大气 = 我也不知道哪不好反正就是不好</p>
<p>要精致的感觉 = 抄苹果<br>要利用用户的固有习惯 = 抄同行<br>要追求流行设计趋势 = 抄微信/淘宝/滴滴…</p>
<p>当务之急是抢占市场 = 快狂发补贴<br>快速建立用户群体的壁垒 = 快拉他们进微信群<br>要让用户产生自发传播 = 快让他们转发朋友圈</p>
<p>为了健康发展我们要启动下轮融资 = 公司没钱了<br>我们辞退了一些跟不上公司发展的同事 = 公司没钱了<br>打补贴战其实不符合我们公司的理念 = 公司没钱了</p>
<p>我们已经建立了客户基础 = 我们拉了个微信群<br>我们已经建立了庞大的客户基础 = 一个群装不下，我们有两个微信群<br>已经实现了O2O模式 = 我们有几个送外卖的<br>从细分市场干起 = 我们的外卖只送这一片</p>
<p>采用了大数据技术 = 日志没清空过，都攒着呢，有什么用我也不知道<br>采用了云技术 = 在IDC机房多租了几台服务器</p>
<p>我们在寻找合伙人 = 就差一个程序员了<br>我们市场前景巨大 = 就差一个程序员了<br>我们有绝妙的idea = 就差一个程序员了<br>我们已经准备好了 = 就差风投来撒钱了<br>我们正在全力占领市场 = 压根没想过怎么盈利<br>我们非常欣赏您的投资理念 = 风投你该来B轮了</p>
<p><img src="http://ot4jt9w1k.bkt.clouddn.com/22.png" alt="二脸懵逼"></p>
<h3 id="产品经理黑话"><a href="#产品经理黑话" class="headerlink" title="产品经理黑话"></a><font color="#FF8247" size="3" face="黑体">产品经理黑话</font></h3><p>产品设计应该大道至简 = 复杂的我也不会<br>用户都应该用完即走 = 回不回来我不管<br>这是常规的典型的做法 = 我抄的微信/淘宝/滴滴…</p>
<p>需求要抓住人性 = 多放美女照片<br>得考虑用户的使用场景 = 加个夜间模式<br>商业模式要形成闭环 = 放东西线上卖<br>要搭建完善的用户运营体系 = 做个积分商城<br>要有社交元素促进活跃度 = 塞一个IM</p>
<p>没有用户是因为没有做好运营 = 不是我的锅<br>体验不好是因为技术实现问题 = 不是我的锅<br>界面难看是因为设计水平不行 = 反正都不是我的锅</p>
<p>在吗？= 要改需求了<br>哥哥最近累吗要不要喝奶茶 = 要改需求了<br>下次肯定不改了 = 这次先改了再说<br>这个好搞吗？＝不好搞也要想办法</p>
<p>你看我Axure画的 = 这个需求很简单<br>这个需求很简单 = 怎么实现我不管<br>怎么实现我不管 = 明天上线<br>开发的怎么样了？＝怎么还没开发完</p>
<p>你的建议很好我们已经想到了 = 我擦说得真有道理赶紧提需求<br>你的建议我们会考虑的 = 这建议好像有点蠢<br>你的建议很有启发性 = 哈哈哈什么杰宝玩意儿<br>我们尊重你的意见 = 这个版本不做</p>
<p><img src="http://ot4jt9w1k.bkt.clouddn.com/33.png" alt="三脸懵逼"></p>
<h3 id="程序员黑话"><a href="#程序员黑话" class="headerlink" title="程序员黑话"></a><font color="#FF8247" size="3" face="黑体">程序员黑话</font></h3><p>最近老加班＝老板该加工资了<br>我回去评估一下技术难度＝先拖两天<br>你这个需求不清晰 = 我不想做<br>你确定有这个需求吗？＝做出来没人用老子跟你拼了</p>
<p>你怎么老改需求啊 = X了个X<br>你怎么设计的这么复杂啊 = X了个X<br>你怎么就给这么短时间啊 = X了个X</p>
<p>在吗？ = 要延期了<br>弟弟最近累吗要不要喝奶茶 = 要延期了<br>下次肯定不延期了 = 这次先应付了再说</p>
<p>你退后点说话 = 口水别喷到我宝贝键盘上<br>你别把胸压到桌子上 = 我宝贝键盘会受不了的<br>你告诉我输什么我自己来 = 你别用脏手碰我的宝贝键盘<br>你告诉我往那晚自己来=别tm指我的Retina屏！</p>
<p>你怎么还用 Word 啊？ = Markdown 才是最好的写作工具<br>你怎么还在用 ThinkPad 啊？ = Mac 才是最好的电脑<br>你怎么还在自学 Python 啊？ = PHP 才是最好的语言</p>
<p><img src="http://ot4jt9w1k.bkt.clouddn.com/44.png" alt="四脸懵逼"></p>
<h3 id="招聘黑话"><a href="#招聘黑话" class="headerlink" title="招聘黑话"></a><font color="#FF8247" size="3" face="黑体">招聘黑话</font></h3><p>适应较快的工作节奏 = 加班<br>有强烈的上进心 = 加班<br>喜欢有挑战性的工作 = 还是加班、并且前人留的坑不少<br>能独立完成任务 = 前端后端运维测试都你一个人干</p>
<p>团队氛围很好 = 大家经常一起加班，一起吃加班餐<br>弹性工作制 = 加班，且没有加班费<br>上不封顶 = 下不保底<br>上升空间大 = 工资低<br>有股权 = 没那么多工资给你<br>13 薪起 = 13 薪<br>年底有奖金 = 大于 12 薪小于 13 薪</p>
<p>公司扁平化管理  = 领导和你坐一屋<br>领导安排的其它任务 = 叫你干啥你就得干啥<br>领导好 = 能陪你一起加班<br>妹纸多 ＝ 公司一般，只能拿员工出来炫耀<br>我们每天都有果盘 = 可能是公司唯一的福利了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理了一下互联网创业公司常用的黑话，供大家参考，可以避免理解上的偏差。你肯定听过其中几款，却未必了解当时说话人的怨念……在阅读过程中，请保持严肃，不要哄堂大笑。&lt;br&gt;
    
    </summary>
    
    
      <category term="心路历程" scheme="http://xrhou.github.io/tags/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 安装golang</title>
    <link href="http://xrhou.github.io/2017/07/19/Centos7-%E5%AE%89%E8%A3%85golang/"/>
    <id>http://xrhou.github.io/2017/07/19/Centos7-安装golang/</id>
    <published>2017-07-19T06:02:55.000Z</published>
    <updated>2017-08-22T05:58:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://xrhou.github.io">Centos7的go语言安装</a><br><a id="more"></a><br>使用二进制文件安装</p>
<h3 id="1、下载二进制文件："><a href="#1、下载二进制文件：" class="headerlink" title="1、下载二进制文件："></a>1、下载二进制文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget http://www.golangtc.com/static/go/1.6.2/go1.6.2.linux-amd64.tar.gz</div></pre></td></tr></table></figure>
<h3 id="2、解压并创建工作目录："><a href="#2、解压并创建工作目录：" class="headerlink" title="2、解压并创建工作目录："></a>2、解压并创建工作目录：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ tar -zxf go1.6.2.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span>/</div><div class="line"></div><div class="line">$ mkdir /Golang</div></pre></td></tr></table></figure>
<h3 id="3、设置环境变量："><a href="#3、设置环境变量：" class="headerlink" title="3、设置环境变量："></a>3、设置环境变量：</h3><p>在 /etc/profile 添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go </div><div class="line"><span class="built_in">export</span> GOBIN=<span class="variable">$GOROOT</span>/bin</div><div class="line"><span class="built_in">export</span> GOPKG=<span class="variable">$GOROOT</span>/pkg/tool/linux_amd64 </div><div class="line"><span class="built_in">export</span> GOARCH=amd64</div><div class="line"><span class="built_in">export</span> GOOS=linux</div><div class="line"><span class="built_in">export</span> GOPATH=/Golang</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOBIN</span>:<span class="variable">$GOPKG</span>:<span class="variable">$GOPATH</span>/bin</div></pre></td></tr></table></figure></p>
<p>然后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure></p>
<p>使之生效。</p>
<h3 id="4-编写demo程序验证下："><a href="#4-编写demo程序验证下：" class="headerlink" title="4.编写demo程序验证下："></a>4.编写demo程序验证下：</h3><h4 id="4-1-gt-编写demo程序："><a href="#4-1-gt-编写demo程序：" class="headerlink" title="4.1&gt; 编写demo程序："></a>4.1&gt; 编写demo程序：</h4><h5 id="vi-demo-go"><a href="#vi-demo-go" class="headerlink" title="vi demo.go"></a>vi demo.go</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">package main</div><div class="line">import <span class="string">"fmt"</span></div><div class="line"></div><div class="line">func <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">    fmt.Printf(<span class="string">"Let's go\n"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="4-2-gt-编译运行："><a href="#4-2-gt-编译运行：" class="headerlink" title="4.2&gt; 编译运行："></a>4.2&gt; 编译运行：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ go run demo.go</div></pre></td></tr></table></figure>
<p>运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./demo</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://xrhou.github.io&quot;&gt;Centos7的go语言安装&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="http://xrhou.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>长大后...</title>
    <link href="http://xrhou.github.io/2017/07/19/%E9%95%BF%E5%A4%A7%E5%90%8E/"/>
    <id>http://xrhou.github.io/2017/07/19/长大后/</id>
    <published>2017-07-19T01:13:14.000Z</published>
    <updated>2017-08-22T05:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<p> 爸爸当上领导后，从来不敢多说话，生怕给别人带来压力。<br><a id="more"></a><br>   上个月，爸爸的下属小李叔叔到我家来玩，爸爸随口说了句：“家里没空调，比较热，见笑了。”<br>   第二天，小李叔叔带师傅给我家安装了5匹的大空调！怎么也不肯收钱。<br>上个星期，爸爸看到老张伯伯在办公室吃午饭，其中有煎的鱼，随口说了句：“哎呦，真香！”！<br>当天晚上。老张伯伯给我家送了一箱鲜鱼来。<br>   有天晚上在路上，碰到单位的小王叔叔和他老婆逛街，爸爸随口称赞道：“哎呦，小王，你媳妇真漂亮！”<br>第二天晚上，妈妈不在家，突然听到有人敲门，打开门一看，小王叔叔的媳妇站在门口，见到爸爸就满脸的微笑说：“领导，我们家小王说嫂子不在家，让我来陪陪你！”<br>  当领导真好，我长大以后也要像爸爸一样当领导。<br>当领导真好，怪不得那么多人喜欢当领导！ 儿子对他当局长的爸爸说：“我很喜欢楼下周副局长家的女儿！”<br>局长偷偷说：“不行，那是你同父异母的妹妹！”<br>儿子又说：“那我也喜欢隔壁王科长家的女儿！”<br>局长又说：“那也不行，亦是你同父异母的妹妹，千万别对你妈说。”<br>儿子只好偷偷跟妈妈说了。<br>妈妈安慰儿子：“你喜欢谁就娶谁，别理他，市委黄书记才是你亲爹！</p>
<p>天黑路滑，社会太复杂。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 爸爸当上领导后，从来不敢多说话，生怕给别人带来压力。&lt;br&gt;
    
    </summary>
    
    
      <category term="心路历程" scheme="http://xrhou.github.io/tags/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot中文乱码解决</title>
    <link href="http://xrhou.github.io/2017/07/17/Spring-Boot%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <id>http://xrhou.github.io/2017/07/17/Spring-Boot中文乱码解决/</id>
    <published>2017-07-17T08:14:56.000Z</published>
    <updated>2017-08-22T05:58:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用SpringBoot开发，对外开放接口供调用，传入参数中有中文，出现中文乱码，废话少说，直接上代码。<br><a id="more"></a><br>解决乱码方法如下：</p>
<h4 id="第一步-约定传参编码格式"><a href="#第一步-约定传参编码格式" class="headerlink" title="第一步,约定传参编码格式"></a>第一步,约定传参编码格式</h4><p>不管是使用httpclient，还是okhttp，都要设置传参的编码，为了统一，这里全部设置为utf-8</p>
<h4 id="第二步，修改application-properties文件"><a href="#第二步，修改application-properties文件" class="headerlink" title="第二步，修改application.properties文件"></a>第二步，修改application.properties文件</h4><p>增加如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">spring.http.encoding.force=true</div><div class="line"></div><div class="line">spring.http.encoding.charset=UTF-8</div><div class="line"></div><div class="line">spring.http.encoding.enabled=true</div><div class="line"></div><div class="line">server.tomcat.uri-encoding=UTF-8</div></pre></td></tr></table></figure></p>
<p>此时拦截器中返回的中文已经不乱码了，但是controller中返回的数据依旧乱码。</p>
<h4 id="第三步，修改controller的-RequestMapping"><a href="#第三步，修改controller的-RequestMapping" class="headerlink" title="第三步，修改controller的@RequestMapping"></a>第三步，修改controller的@RequestMapping</h4><p>修改如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">produces=<span class="string">"text/plain;charset=UTF-8"</span></div></pre></td></tr></table></figure></p>
<p>这种方法的弊端是限定了数据类型，继续查找资料，在stackoverflow上发现解决办法，是在配置类中增加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class CustomMVCConfiguration extends WebMvcConfigurerAdapter &#123;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public HttpMessageConverter&lt;String&gt; responseBodyConverter() &#123;</div><div class="line">        StringHttpMessageConverter converter = new StringHttpMessageConverter(Charset.forName(&quot;UTF-8&quot;));</div><div class="line">        return converter;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</div><div class="line">        super.configureMessageConverters(converters);</div><div class="line">        converters.add(responseBodyConverter());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void configureContentNegotiation(</div><div class="line">            ContentNegotiationConfigurer configurer) &#123;</div><div class="line">        configurer.favorPathExtension(false);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如此以上步骤走完可以解决SpringBoot的中文乱码问题了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用SpringBoot开发，对外开放接口供调用，传入参数中有中文，出现中文乱码，废话少说，直接上代码。&lt;br&gt;
    
    </summary>
    
    
      <category term="springboot" scheme="http://xrhou.github.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>iBATIS结果映射</title>
    <link href="http://xrhou.github.io/2017/07/17/iBATIS%E7%BB%93%E6%9E%9C%E6%98%A0%E5%B0%84/"/>
    <id>http://xrhou.github.io/2017/07/17/iBATIS结果映射/</id>
    <published>2017-07-17T06:01:02.000Z</published>
    <updated>2017-07-17T08:53:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前使用的是hibernate的关系映射，换工作后新单位用dubbo框架，整个业务经常要使用ibatis结果集。进而针对ibatis的使用做个总结，好记心不如烂笔头，对自己的理解做个总结。<br><a id="more"></a><br>resultMap的元素是在iBATIS的最重要和最强大的元素。您可以通过使用iBATIS的结果映射减少高达90％的JDBC编码，在某些情况下，可以让你做JDBC不支持的事情。<br>ResultMaps的设计是这样的简单语句不需要明确的结果映射，以及更复杂的报表要求不超过绝对必要说明的关系。<br>本章将只给你一个简单的介绍iBATIS的结果映射。</p>
<h4 id="在MySQL中创建EMPLOYEE表："><a href="#在MySQL中创建EMPLOYEE表：" class="headerlink" title="在MySQL中创建EMPLOYEE表："></a>在MySQL中创建EMPLOYEE表：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE EMPLOYEE (</div><div class="line">	id INT NOT NULL auto_increment,</div><div class="line">	first_name VARCHAR(20) default NULL,</div><div class="line">	last_name  VARCHAR(20) default NULL,</div><div class="line">	salary  INT  default NULL,</div><div class="line">	PRIMARY KEY (id)</div><div class="line">);</div></pre></td></tr></table></figure>
<p>EMPLOYEE表有如下两条记录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select*from EMPLOYEE;</div><div class="line">+----+------------+-----------+--------+</div><div class="line">| id | first_name | last_name | salary |</div><div class="line">+----+------------+-----------+--------+</div><div class="line">|1|Zara|Ali|5000|</div><div class="line">|2|HM|Ali|3000|</div><div class="line">+----+------------+-----------+--------+</div><div class="line">2 row inset(0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="Employee-POJO-类"><a href="#Employee-POJO-类" class="headerlink" title="Employee POJO 类:"></a>Employee POJO 类:</h4><p>使用iBATIS的结果映射，需要修改Employee.java文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Created by houxiurong on 2017/7/17.</div><div class="line"> */</div><div class="line">public class Employee &#123;</div><div class="line"></div><div class="line">    private int id;</div><div class="line">    private String first_name;</div><div class="line">    private String last_name;</div><div class="line">    private int salary;</div><div class="line"></div><div class="line">    /* Define constructors for the Employee class. */</div><div class="line">    public Employee() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public Employee(String fname, String lname, int salary) &#123;</div><div class="line">        this.first_name = fname;</div><div class="line">        this.last_name = lname;</div><div class="line">        this.salary = salary;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /* Here are the required method definitions */</div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getFirstName() &#123;</div><div class="line">        return first_name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFirstName(String fname) &#123;</div><div class="line">        this.first_name = fname;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getLastName() &#123;</div><div class="line">        return last_name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setlastName(String lname) &#123;</div><div class="line">        this.last_name = lname;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getSalary() &#123;</div><div class="line">        return salary;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setSalary(int salary) &#123;</div><div class="line">        this.salary = salary;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Employee-xml-文件"><a href="#Employee-xml-文件" class="headerlink" title="Employee.xml 文件:"></a>Employee.xml 文件:</h3><p>在这里，我们将修改Employee.xml文件介绍标记。这个标签就必须在我们<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE sqlMap  PUBLIC &quot;-//ibatis.apache.org//DTD SQL Map 2.0//EN&quot;</div><div class="line">                &quot;http://ibatis.apache.org/dtd/sql-map-2.dtd&quot;&gt;</div><div class="line">&lt;sqlMap namespace=&quot;Employee&quot;&gt;</div><div class="line"></div><div class="line">    &lt;!-- Using ResultMap --&gt;</div><div class="line">    &lt;resultMap id=&quot;result&quot; class=&quot;Employee&quot;&gt;</div><div class="line">        &lt;result property=&quot;id&quot; column=&quot;id&quot;/&gt;</div><div class="line">        &lt;result property=&quot;first_name&quot; column=&quot;first_name&quot;/&gt;</div><div class="line">        &lt;result property=&quot;last_name&quot; column=&quot;last_name&quot;/&gt;</div><div class="line">        &lt;result property=&quot;salary&quot; column=&quot;salary&quot;/&gt;</div><div class="line">    &lt;/resultMap&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Insert Operation --&gt;</div><div class="line">    &lt;insert id=&quot;insert&quot; parameterClass=&quot;Employee&quot;&gt;</div><div class="line">        &lt;selectKey resultClass=&quot;int&quot; keyProperty=&quot;id&quot;&gt;</div><div class="line">            select last_insert_id() as id</div><div class="line">        &lt;/selectKey&gt;</div><div class="line">        INSERT INTO EMPLOYEE(first_name, last_name, salary)</div><div class="line">        VALUES(#first_name#, #last_name#, #salary#)</div><div class="line">    &lt;/insert&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Read Operation --&gt;</div><div class="line">    &lt;select id=&quot;getAll&quot; resultClass=&quot;Employee&quot;&gt;</div><div class="line">        SELECT * FROM EMPLOYEE</div><div class="line">    &lt;/select&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Update Operation --&gt;</div><div class="line">    &lt;update id=&quot;update&quot; parameterClass=&quot;Employee&quot;&gt;</div><div class="line">        UPDATE EMPLOYEE SET first_name = #first_name# WHERE id = #id#</div><div class="line">    &lt;/update&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Delete Operation --&gt;</div><div class="line">    &lt;delete id=&quot;delete&quot; parameterClass=&quot;int&quot;&gt;</div><div class="line">        DELETE FROM EMPLOYEE WHERE id = #id#</div><div class="line">    &lt;/delete&gt;</div><div class="line"></div><div class="line">    &lt;select id=&quot;useResultMap&quot; resultMap=&quot;result&quot;&gt;</div><div class="line">        SELECT * FROM EMPLOYEE WHERE id=#id#</div><div class="line">    &lt;/select&gt;</div><div class="line">&lt;/sqlMap&gt;</div></pre></td></tr></table></figure></p>
<h3 id="IbatisResultMap-java-文件"><a href="#IbatisResultMap-java-文件" class="headerlink" title="IbatisResultMap.java 文件:"></a>IbatisResultMap.java 文件:</h3><p>文件将应用程序级别的逻辑，从使用结果映射Employee表中读取记录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import com.ibatis.common.resources.Resources;</div><div class="line">import com.ibatis.sqlmap.client.SqlMapClient;</div><div class="line">import com.ibatis.sqlmap.client.SqlMapClientBuilder;</div><div class="line">import java.io.*;</div><div class="line">import java.sql.SQLException;</div><div class="line">import java.util.*;</div><div class="line"></div><div class="line">public class IbatisResultMap&#123;</div><div class="line"></div><div class="line"> public static void main(String[] args)throws IOException,SQLException&#123;</div><div class="line">   	Reader rd =Resources.getResourceAsReader(&quot;SqlMapConfig.xml&quot;);</div><div class="line">   	SqlMapClient smc =SqlMapClientBuilder.buildSqlMapClient(rd);</div><div class="line">   	int id =1;</div><div class="line">   	System.out.println(&quot;Going to read record.....&quot;);</div><div class="line">   	Employee e =(Employee)smc.queryForObject(&quot;Employee.useResultMap&quot;, id);</div><div class="line">   	System.out.println(&quot;ID:  &quot;+ e.getId());</div><div class="line">   	System.out.println(&quot;First Name:  &quot;+ e.getFirstName());</div><div class="line">   	System.out.println(&quot;Last Name:  &quot;+ e.getLastName());</div><div class="line">   	System.out.println(&quot;Salary:  &quot;+ e.getSalary());</div><div class="line">   	System.out.println(&quot;Record read Successfully &quot;);</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编译和运行：<br>下面是步骤来编译并运行上述程序。请确保您已在进行的编译和执行之前，适当地设置PATH和CLASSPATH。</p>
<ul>
<li>创建Employee.xml如上所示。</li>
<li>创建Employee.java如上所示，并编译它。</li>
<li>创建IbatisResultMap.java如上所示，并编译它。</li>
<li>执行IbatisResultMap二进制文件来运行程序。<br>会得到下面的结果是对EMPLOYEE表的读操作。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Going to read record..... </div><div class="line">ID:1 FirstName:Zara LastName:Ali Salary:5000 </div><div class="line">Record read Successfully</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前使用的是hibernate的关系映射，换工作后新单位用dubbo框架，整个业务经常要使用ibatis结果集。进而针对ibatis的使用做个总结，好记心不如烂笔头，对自己的理解做个总结。&lt;br&gt;
    
    </summary>
    
    
      <category term="ibatis" scheme="http://xrhou.github.io/tags/ibatis/"/>
    
      <category term="java" scheme="http://xrhou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo-blog部署</title>
    <link href="http://xrhou.github.io/2017/07/16/%E6%88%91%E7%9A%84hexo-blog/"/>
    <id>http://xrhou.github.io/2017/07/16/我的hexo-blog/</id>
    <published>2017-07-16T07:35:12.000Z</published>
    <updated>2017-08-22T05:58:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>周末，两天没出门，除了下楼拿外卖，昨天研究了下layui前段框架。看到很多个人的blog在hexo的驱动下部署的个人blog,心血来潮，自己也弄了一个。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末，两天没出门，除了下楼拿外卖，昨天研究了下layui前段框架。看到很多个人的blog在hexo的驱动下部署的个人blog,心血来潮，自己也弄了一个。&lt;/p&gt;

    
    </summary>
    
    
      <category term="心路历程" scheme="http://xrhou.github.io/tags/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xrhou.github.io/2017/07/16/hello-world/"/>
    <id>http://xrhou.github.io/2017/07/16/hello-world/</id>
    <published>2017-07-16T06:00:17.000Z</published>
    <updated>2017-07-17T07:32:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
