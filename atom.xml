<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>土豆丝不加辣</title>
  <subtitle>java后端爱好者-点滴记忆</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xrhou.github.io/"/>
  <updated>2017-07-17T08:19:35.000Z</updated>
  <id>http://xrhou.github.io/</id>
  
  <author>
    <name>houxiurong-侯秀荣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Boot中文乱码解决</title>
    <link href="http://xrhou.github.io/2017/07/17/Spring-Boot%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <id>http://xrhou.github.io/2017/07/17/Spring-Boot中文乱码解决/</id>
    <published>2017-07-17T08:14:56.000Z</published>
    <updated>2017-07-17T08:19:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用SpringBoot开发，对外开放接口供调用，传入参数中有中文，出现中文乱码，废话少说，直接上代码。<br><a id="more"></a><br>解决乱码方法如下：</p>
<h4 id="第一步-约定传参编码格式"><a href="#第一步-约定传参编码格式" class="headerlink" title="第一步,约定传参编码格式"></a>第一步,约定传参编码格式</h4><p>不管是使用httpclient，还是okhttp，都要设置传参的编码，为了统一，这里全部设置为utf-8</p>
<h4 id="第二步，修改application-properties文件"><a href="#第二步，修改application-properties文件" class="headerlink" title="第二步，修改application.properties文件"></a>第二步，修改application.properties文件</h4><p>增加如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">spring.http.encoding.force=true</div><div class="line"></div><div class="line">spring.http.encoding.charset=UTF-8</div><div class="line"></div><div class="line">spring.http.encoding.enabled=true</div><div class="line"></div><div class="line">server.tomcat.uri-encoding=UTF-8</div></pre></td></tr></table></figure></p>
<p>此时拦截器中返回的中文已经不乱码了，但是controller中返回的数据依旧乱码。</p>
<h4 id="第三步，修改controller的-RequestMapping"><a href="#第三步，修改controller的-RequestMapping" class="headerlink" title="第三步，修改controller的@RequestMapping"></a>第三步，修改controller的@RequestMapping</h4><p>修改如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">produces=<span class="string">"text/plain;charset=UTF-8"</span></div></pre></td></tr></table></figure></p>
<p>这种方法的弊端是限定了数据类型，继续查找资料，在stackoverflow上发现解决办法，是在配置类中增加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class CustomMVCConfiguration extends WebMvcConfigurerAdapter &#123;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public HttpMessageConverter&lt;String&gt; responseBodyConverter() &#123;</div><div class="line">        StringHttpMessageConverter converter = new StringHttpMessageConverter(Charset.forName(&quot;UTF-8&quot;));</div><div class="line">        return converter;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</div><div class="line">        super.configureMessageConverters(converters);</div><div class="line">        converters.add(responseBodyConverter());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void configureContentNegotiation(</div><div class="line">            ContentNegotiationConfigurer configurer) &#123;</div><div class="line">        configurer.favorPathExtension(false);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如此以上步骤走完可以解决SpringBoot的中文乱码问题了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用SpringBoot开发，对外开放接口供调用，传入参数中有中文，出现中文乱码，废话少说，直接上代码。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iBATIS结果映射</title>
    <link href="http://xrhou.github.io/2017/07/17/iBATIS%E7%BB%93%E6%9E%9C%E6%98%A0%E5%B0%84/"/>
    <id>http://xrhou.github.io/2017/07/17/iBATIS结果映射/</id>
    <published>2017-07-17T06:01:02.000Z</published>
    <updated>2017-07-17T08:30:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前使用的是hibernate的关系映射，换工作后新单位用dubbo框架，整个业务经常要使用ibatis结果集。进而针对ibatis的使用做个总结，好记心不如烂笔头，对自己的理解做个总结。<br><a id="more"></a><br>resultMap的元素是在iBATIS的最重要和最强大的元素。您可以通过使用iBATIS的结果映射减少高达90％的JDBC编码，在某些情况下，可以让你做JDBC不支持的事情。<br>ResultMaps的设计是这样的简单语句不需要明确的结果映射，以及更复杂的报表要求不超过绝对必要说明的关系。<br>本章将只给你一个简单的介绍iBATIS的结果映射。</p>
<h4 id="在MySQL中创建EMPLOYEE表："><a href="#在MySQL中创建EMPLOYEE表：" class="headerlink" title="在MySQL中创建EMPLOYEE表："></a>在MySQL中创建EMPLOYEE表：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE EMPLOYEE (</div><div class="line">	id INT NOT NULL auto_increment,</div><div class="line">	first_name VARCHAR(20) default NULL,</div><div class="line">	last_name  VARCHAR(20) default NULL,</div><div class="line">	salary  INT  default NULL,</div><div class="line">	PRIMARY KEY (id)</div><div class="line">);</div></pre></td></tr></table></figure>
<p>EMPLOYEE表有如下两条记录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt;select*from EMPLOYEE;</div><div class="line">+----+------------+-----------+--------+</div><div class="line">| id | first_name | last_name | salary |</div><div class="line">+----+------------+-----------+--------+</div><div class="line">|1|Zara|Ali|5000|</div><div class="line">|2|HM|Ali|3000|</div><div class="line">+----+------------+-----------+--------+</div><div class="line">2 row inset(0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="Employee-POJO-类"><a href="#Employee-POJO-类" class="headerlink" title="Employee POJO 类:"></a>Employee POJO 类:</h4><p>使用iBATIS的结果映射，需要修改Employee.java文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Created by houxiurong on 2017/7/17.</div><div class="line"> */</div><div class="line">public class Employee &#123;</div><div class="line"></div><div class="line">    private int id;</div><div class="line">    private String first_name;</div><div class="line">    private String last_name;</div><div class="line">    private int salary;</div><div class="line"></div><div class="line">    /* Define constructors for the Employee class. */</div><div class="line">    public Employee() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public Employee(String fname, String lname, int salary) &#123;</div><div class="line">        this.first_name = fname;</div><div class="line">        this.last_name = lname;</div><div class="line">        this.salary = salary;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /* Here are the required method definitions */</div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getFirstName() &#123;</div><div class="line">        return first_name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFirstName(String fname) &#123;</div><div class="line">        this.first_name = fname;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getLastName() &#123;</div><div class="line">        return last_name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setlastName(String lname) &#123;</div><div class="line">        this.last_name = lname;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getSalary() &#123;</div><div class="line">        return salary;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setSalary(int salary) &#123;</div><div class="line">        this.salary = salary;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Employee-xml-文件"><a href="#Employee-xml-文件" class="headerlink" title="Employee.xml 文件:"></a>Employee.xml 文件:</h3><p>在这里，我们将修改Employee.xml文件介绍标记。这个标签就必须在我们<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE sqlMap  PUBLIC &quot;-//ibatis.apache.org//DTD SQL Map 2.0//EN&quot;</div><div class="line">                &quot;http://ibatis.apache.org/dtd/sql-map-2.dtd&quot;&gt;</div><div class="line">&lt;sqlMap namespace=&quot;Employee&quot;&gt;</div><div class="line"></div><div class="line">    &lt;!-- Using ResultMap --&gt;</div><div class="line">    &lt;resultMap id=&quot;result&quot; class=&quot;Employee&quot;&gt;</div><div class="line">        &lt;result property=&quot;id&quot; column=&quot;id&quot;/&gt;</div><div class="line">        &lt;result property=&quot;first_name&quot; column=&quot;first_name&quot;/&gt;</div><div class="line">        &lt;result property=&quot;last_name&quot; column=&quot;last_name&quot;/&gt;</div><div class="line">        &lt;result property=&quot;salary&quot; column=&quot;salary&quot;/&gt;</div><div class="line">    &lt;/resultMap&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Insert Operation --&gt;</div><div class="line">    &lt;insert id=&quot;insert&quot; parameterClass=&quot;Employee&quot;&gt;</div><div class="line">        &lt;selectKey resultClass=&quot;int&quot; keyProperty=&quot;id&quot;&gt;</div><div class="line">            select last_insert_id() as id</div><div class="line">        &lt;/selectKey&gt;</div><div class="line">        INSERT INTO EMPLOYEE(first_name, last_name, salary)</div><div class="line">        VALUES(#first_name#, #last_name#, #salary#)</div><div class="line">    &lt;/insert&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Read Operation --&gt;</div><div class="line">    &lt;select id=&quot;getAll&quot; resultClass=&quot;Employee&quot;&gt;</div><div class="line">        SELECT * FROM EMPLOYEE</div><div class="line">    &lt;/select&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Update Operation --&gt;</div><div class="line">    &lt;update id=&quot;update&quot; parameterClass=&quot;Employee&quot;&gt;</div><div class="line">        UPDATE EMPLOYEE SET first_name = #first_name# WHERE id = #id#</div><div class="line">    &lt;/update&gt;</div><div class="line"></div><div class="line">    &lt;!-- Perform Delete Operation --&gt;</div><div class="line">    &lt;delete id=&quot;delete&quot; parameterClass=&quot;int&quot;&gt;</div><div class="line">        DELETE FROM EMPLOYEE WHERE id = #id#</div><div class="line">    &lt;/delete&gt;</div><div class="line"></div><div class="line">    &lt;select id=&quot;useResultMap&quot; resultMap=&quot;result&quot;&gt;</div><div class="line">        SELECT * FROM EMPLOYEE WHERE id=#id#</div><div class="line">    &lt;/select&gt;</div><div class="line">&lt;/sqlMap&gt;</div></pre></td></tr></table></figure></p>
<h3 id="IbatisResultMap-java-文件"><a href="#IbatisResultMap-java-文件" class="headerlink" title="IbatisResultMap.java 文件:"></a>IbatisResultMap.java 文件:</h3><p>文件将应用程序级别的逻辑，从使用结果映射Employee表中读取记录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import com.ibatis.common.resources.Resources;</div><div class="line">import com.ibatis.sqlmap.client.SqlMapClient;</div><div class="line">import com.ibatis.sqlmap.client.SqlMapClientBuilder;</div><div class="line">import java.io.*;</div><div class="line">import java.sql.SQLException;</div><div class="line">import java.util.*;</div><div class="line"></div><div class="line">public class IbatisResultMap&#123;</div><div class="line"></div><div class="line"> public static void main(String[] args)throws IOException,SQLException&#123;</div><div class="line">   	Reader rd =Resources.getResourceAsReader(&quot;SqlMapConfig.xml&quot;);</div><div class="line">   	SqlMapClient smc =SqlMapClientBuilder.buildSqlMapClient(rd);</div><div class="line">   	int id =1;</div><div class="line">   	System.out.println(&quot;Going to read record.....&quot;);</div><div class="line">   	Employee e =(Employee)smc.queryForObject(&quot;Employee.useResultMap&quot;, id);</div><div class="line">   	System.out.println(&quot;ID:  &quot;+ e.getId());</div><div class="line">   	System.out.println(&quot;First Name:  &quot;+ e.getFirstName());</div><div class="line">   	System.out.println(&quot;Last Name:  &quot;+ e.getLastName());</div><div class="line">   	System.out.println(&quot;Salary:  &quot;+ e.getSalary());</div><div class="line">   	System.out.println(&quot;Record read Successfully &quot;);</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编译和运行：<br>下面是步骤来编译并运行上述程序。请确保您已在进行的编译和执行之前，适当地设置PATH和CLASSPATH。</p>
<ul>
<li>创建Employee.xml如上所示。</li>
<li>创建Employee.java如上所示，并编译它。</li>
<li>创建IbatisResultMap.java如上所示，并编译它。</li>
<li>执行IbatisResultMap二进制文件来运行程序。<br>会得到下面的结果是对EMPLOYEE表的读操作。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Going to read record..... </div><div class="line">ID:1 FirstName:Zara LastName:Ali Salary:5000 </div><div class="line">Record read Successfully</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前使用的是hibernate的关系映射，换工作后新单位用dubbo框架，整个业务经常要使用ibatis结果集。进而针对ibatis的使用做个总结，好记心不如烂笔头，对自己的理解做个总结。&lt;br&gt;
    
    </summary>
    
    
      <category term="ibatis" scheme="http://xrhou.github.io/tags/ibatis/"/>
    
      <category term="java" scheme="http://xrhou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo-blog部署</title>
    <link href="http://xrhou.github.io/2017/07/16/%E6%88%91%E7%9A%84hexo-blog/"/>
    <id>http://xrhou.github.io/2017/07/16/我的hexo-blog/</id>
    <published>2017-07-16T07:35:12.000Z</published>
    <updated>2017-07-16T14:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>周末，两天没出门，除了下楼拿外卖，昨天研究了下layui前段框架。看到很多个人的blog在hexo的驱动下部署的个人blog,心血来潮，自己也弄了一个。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末，两天没出门，除了下楼拿外卖，昨天研究了下layui前段框架。看到很多个人的blog在hexo的驱动下部署的个人blog,心血来潮，自己也弄了一个。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xrhou.github.io/2017/07/16/hello-world/"/>
    <id>http://xrhou.github.io/2017/07/16/hello-world/</id>
    <published>2017-07-16T06:00:17.000Z</published>
    <updated>2017-07-17T07:32:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
